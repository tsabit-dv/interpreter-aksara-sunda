import re
from enum import Enum

class TokenType(Enum):
    VAR_ASSIGN = "VAR_ASSIGN"
    PRINT = "PRINT"
    IDENTIFIER = "IDENTIFIER"
    NUMBER = "NUMBER"
    OPERATOR = "OPERATOR"
    KEYWORD = "KEYWORD"  # тЬЕ Tambahkan kategori keyword baru


# ЁЯФН Pola regex yang lebih lengkap
var_assign_pattern = re.compile(r"соЬсодсоТсоисоЫсоЬсод\s*соЮсозсоФсок\s*([\u1B80-\u1BBF]+)\s*соКсоисоЮсок\s*(\d+)")
print_pattern = re.compile(r"соХсоЬсоксоТсожсоФсок\((.+)\)")
keyword_pattern = re.compile(r"соГсоФсоксоУсоисоХсодсоКсок")  # тЬЕ Deteksi kata kunci baru
identifier_pattern = re.compile(r"[\u1B80-\u1BBF]+")  # Sesuai dengan Unicode aksara Sunda
number_pattern = re.compile(r"\d+")
operator_pattern = re.compile(r"[+\-*/]")

def lexer(code):
    tokens = []
    lines = code.strip().split("\n")

    for line in lines:
        line = line.strip()
        print(f"ЁЯФН Debug: Processing line -> {line}")  # тЬЕ Debugging

        if var_assign_pattern.match(line):
            tokens.append((TokenType.VAR_ASSIGN, line))
            print(f"тЬЕ Matched VAR_ASSIGN -> {line}")  # тЬЕ Debugging
        elif print_pattern.match(line):
            tokens.append((TokenType.PRINT, line))
            print(f"тЬЕ Matched PRINT -> {line}")  # тЬЕ Debugging
        elif keyword_pattern.match(line):  # тЬЕ Tangkap kata kunci baru
            tokens.append((TokenType.KEYWORD, line))
            print(f"тЬЕ Matched KEYWORD -> {line}")  # тЬЕ Debugging
        else:
            print(f"тЭМ Lexer Error: Tidak bisa membaca '{line}'")  # тЭМ Error handling

    return tokens

# ЁЯФ╣ Contoh kode input
code = """
соЬсодсоТсоисоЫсоЬсод соЮсозсоФсок соК соКсоисоЮсок 10
соЬсодсоТсоисоЫсоЬсод соЮсозсоФсок соКсожсоТ соКсоисоЮсок 5
соХсоЬсоксоТсожсоФсок(соК + соКсожсоТ)
"""

# ЁЯФе Jalankan lexer
tokens = lexer(code)

# тЬЕ Tampilkan hasil token
print("\nЁЯФ╣ Tokens:")
for token in tokens:
    print(token)
